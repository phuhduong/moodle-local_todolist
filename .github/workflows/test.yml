name: Run Tests

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build and start containers
        run: docker compose up -d --build

      - name: Wait for DB
        run: |
          until docker compose exec -T db pg_isready -U moodle_user; do 
            sleep 2
          done

      - name: Install Composer
        run: |
          docker compose exec -T moodle bash -c "
            curl -sS https://getcomposer.org/installer | php && \
            mv composer.phar /usr/local/bin/composer"

      - name: Clone Moodle
        run: |
          docker compose exec -T moodle bash -c "
            git clone --depth=1 -b MOODLE_401_STABLE https://github.com/moodle/moodle.git /var/www/moodle && \
            cd /var/www/moodle && \
            composer install --no-dev"

      - name: Copy plugin into Moodle
        run: |
          docker compose exec -T moodle bash -c "
            mkdir -p /var/www/moodle/local/local_todolist && \
            cp -r /var/www/html/* /var/www/moodle/local/local_todolist"

      - name: Install Moodle
        run: |
          docker compose exec -T moodle php /var/www/moodle/admin/cli/install.php \
            --non-interactive \
            --agree-license \
            --fullname="Test Site" \
            --shortname="Test" \
            --adminuser=admin \
            --adminpass=Admin123! \
            --adminemail=admin@example.com \
            --dbtype=pgsql \
            --dbhost=db \
            --dbname=${{ secrets.POSTGRES_DB }} \
            --dbuser=${{ secrets.POSTGRES_USER }} \
            --dbpass=${{ secrets.POSTGRES_PASSWORD }} \
            --wwwroot=http://localhost:8080 \
            --dataroot=/var/moodledata

      - name: Init PHPUnit
        run: docker compose exec -T moodle php /var/www/moodle/admin/tool/phpunit/cli/init.php

      - name: Run PHPUnit tests
        run: |
          docker compose exec -T moodle bash -c "
            cd /var/www/moodle && \
            vendor/bin/phpunit local_local_todolist"

      - name: Shut down
        if: always()
        run: docker compose down -v
